import streamlit as st
import requests
from bs4 import BeautifulSoup
import spacy
from textblob import TextBlob

# Apply a dark theme
st.set_page_config(page_title="Rates Focus Market Overview", layout="wide", theme="dark")

nlp = spacy.load("en_core_web_sm")

# Function to scrape news from Yahoo Finance
def fetch_yahoo_finance_news():
    url = "https://finance.yahoo.com/topic/economic-news"
    response = requests.get(url)
    soup = BeautifulSoup(response.content, 'html.parser')
    headlines = {}

    for item in soup.find_all('h3', {'class': lambda x: x and 'Mb(5px)' in x}):
        text = item.get_text()
        link = item.a['href']

        if text and link:
            headlines[text] = {
                'link': f"https://finance.yahoo.com{link}"
            }
    return headlines

# Web App Title with Enhanced Typography
st.markdown("<h1 style='text-align: center; color: white;'>Rates Focus Market Overview</h1>", unsafe_allow_html=True)
st.markdown("<h3 style='text-align: center; color: white;'>By Jamal Lawal</h3>", unsafe_allow_html=True)

headlines = fetch_yahoo_finance_news()
headline_list = list(headlines.keys())

def summarize_text(text):
    doc = nlp(text)
    sentences = [sentence.orth_ for sentence in doc.sents]
    return ' '.join(sentences[:3])  # Return the first 3 sentences as a summary

def fetch_article_text(url):
    response = requests.get(url)
    soup = BeautifulSoup(response.content, 'html.parser')
    paragraphs = soup.find_all('p')
    article_text = ' '.join([para.text for para in paragraphs])
    return article_text

def get_sentiment(text):
    blob = TextBlob(text)
    sentiment_score = blob.sentiment.polarity
    if sentiment_score > 0.00:
        return '😊 Positive', '#00cc66'  # green
    elif sentiment_score < 0.00:
        return '😞 Negative', '#ff6666'  # red
    else:
        return '😐 Neutral', '#ffffff'  # white

st.markdown("<h2 style='color: white;'>Select a headline for summary</h2>", unsafe_allow_html=True)
st.write("Source: Top 10 economics news headlines from Yahoo Finance")
for headline in headline_list:
    with st.expander(headline):
        summary_url = headlines[headline]['link']
        full_article_text = fetch_article_text(summary_url)
        summary = summarize_text(full_article_text)
        sentiment, color = get_sentiment(full_article_text)
        st.markdown(f"Summary: {summary}")
        st.markdown(f"Sentiment: <span style='background-color:{color};'>{sentiment}</span>", unsafe_allow_html=True)
        st.markdown(f"For more details, [click here]({summary_url})", unsafe_allow_html=True)

st.subheader("Economic Calendar")
calendar_choice = st.selectbox('Select Calendar Focus', ['General', 'Focused'])
if calendar_choice == 'General':
    st.write("Economic Calendar (General)")
    iframe_code = '''
<iframe src="https://sslecal2.investing.com?columns=exc_flags,exc_currency,exc_importance,exc_actual,exc_forecast,exc_previous&features=datepicker,timezone,timeselector,filters&countries=72,22,17,35,12,4,5&calType=week&timeZone=15&lang=51" width="650" height="467" frameborder="0" allowtransparency="true" marginwidth="0" marginheight="0"></iframe><div class="poweredBy" style="font-family: Arial, Helvetica, sans-serif;"><span style="font-size: 11px;color: #333333;text-decoration: none;">Real Time Economic Calendar provided by <a href="https://uk.Investing.com/" rel="nofollow" target="_blank" style="font-size: 11px;color: #06529D; font-weight: bold;" class="underline_link">Investing.com UK</a>.</span></div>
'''
    st.components.v1.html(iframe_code, height=500)

elif calendar_choice == 'Focused':
    st.write("Economic Calendar (Focused)")
    iframe_code = '''
<iframe src="https://sslecal2.investing.com?columns=exc_flags,exc_currency,exc_importance,exc_actual,exc_forecast,exc_previous&category=_centralBanks&importance=3&features=datepicker,timezone,timeselector,filters&countries=72,35,4,5&calType=week&timeZone=15&lang=51" width="650" height="467" frameborder="0" allowtransparency="true" marginwidth="0" marginheight="0"></iframe><div class="poweredBy" style="font-family: Arial, Helvetica, sans-serif;"><span style="font-size: 11px;color: #333333;text-decoration: none;">Real Time Economic Calendar provided by <a href="https://uk.Investing.com/" rel="nofollow" target="_blank" style="font-size: 11px;color: #06529D; font-weight: bold;" class="underline_link">Investing.com UK</a>.</span></div>
'''
    st.components.v1.html(iframe_code, height=500)

# Exchange Rates Section
st.subheader("Exchange Rates")
exchange_choice = st.selectbox('Select Yield Curve', ['Spot', 'Heatmap'])

if exchange_choice == 'Spot':
    iframe_code = '''<!-- TradingView Widget BEGIN -->
<div class="tradingview-widget-container">
  <div id="tradingview_3b9cc"></div>
  <script type="text/javascript" src="https://s3.tradingview.com/tv.js"></script>
  <script type="text/javascript">
  new TradingView.widget(
  {
  "autosize": true,
  "symbol": "NASDAQ:AAPL",
  "interval": "D",
  "timezone": "Etc/UTC",
  "theme": "dark",
  "style": "1",
  "locale": "en",
  "toolbar_bg": "#f1f3f6",
  "enable_publishing": false,
  "withdateranges": true,
  "range": "YTD",
  "hide_side_toolbar": false,
  "allow_symbol_change": true,
  "details": true,
  "hotlist": true,
  "calendar": true,
  "container_id": "tradingview_3b9cc"
}
  );
  </script>
</div>
<!-- TradingView Widget END -->
'''
    st.components.v1.html(iframe_code, height=600, width=800)

elif exchange_choice == 'Heatmap':
    iframe_code = '''<!-- TradingView Widget BEGIN -->
<div class="tradingview-widget-container">
  <div id="tradingview_0db0a"></div>
  <script type="text/javascript" src="https://s3.tradingview.com/tv.js"></script>
  <script type="text/javascript">
  new TradingView.widget(
  {
  "autosize": true,
  "symbol": "FOREXCOM:SPXUSD",
  "interval": "1",
  "timezone": "Etc/UTC",
  "theme": "dark",
  "style": "1",
  "locale": "en",
  "toolbar_bg": "#f1f3f6",
  "enable_publishing": false,
  "hide_side_toolbar": false,
  "allow_symbol_change": true,
  "details": true,
  "studies": [
    "Volume@tv-basicstudies"
  ],
  "container_id": "tradingview_0db0a"
}
  );
  </script>
</div>
<!-- TradingView Widget END -->
'''
    st.components.v1.html(iframe_code, height=600, width=800)

# Government Bonds Section
st.subheader("Government Bonds")
iframe_code = '''<!-- TradingView Widget BEGIN -->
<div class="tradingview-widget-container">
  <div id="tradingview_eb0d7"></div>
  <script type="text/javascript" src="https://s3.tradingview.com/tv.js"></script>
  <script type="text/javascript">
  new TradingView.widget(
  {
  "autosize": true,
  "symbol": "CBOE:VIX",
  "interval": "D",
  "timezone": "Etc/UTC",
  "theme": "dark",
  "style": "1",
  "locale": "en",
  "toolbar_bg": "#f1f3f6",
  "enable_publishing": false,
  "withdateranges": true,
  "range": "YTD",
  "hide_side_toolbar": false,
  "allow_symbol_change": true,
  "details": true,
  "hotlist": true,
  "calendar": true,
  "container_id": "tradingview_eb0d7"
}
  );
  </script>
</div>
<!-- TradingView Widget END -->
'''
st.components.v1.html(iframe_code, height=600, width=800)
