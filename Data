import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import requests
from bs4 import BeautifulSoup
from fredapi import Fred

# Function to scrape news from Yahoo Finance
def fetch_yahoo_finance_news():
    url = "https://finance.yahoo.com/"
    response = requests.get(url)
    soup = BeautifulSoup(response.content, 'html.parser')

    headlines = []
    for item in soup.find_all('h3', {'class': lambda x: x and 'Mb(5px)' in x}):
        text = item.get_text()
        if text:
            headlines.append(text)

    return headlines[:5]  # Return top 5 headlines

# Initialize FRED API
fred = Fred(api_key="5da565b90c3bd82a6514a1b3322a43c8")

# Read UK yield data from CSV file
uk_yield_data = pd.read_csv("/path/to/your/csv/file/UK_fwd_curve_data_updated.csv")
# Clean the data by skipping unnecessary rows and setting appropriate headers
uk_yield_data_clean = uk_yield_data.iloc[4:].copy()  # Skip the initial 4 rows
uk_yield_data_clean.columns = ['Forecast Date'] + uk_yield_data.iloc[2, 1:].astype(str).tolist()  # Set the column names

# Convert 'Forecast Date' to datetime format and reset it as the index
uk_yield_data_clean['Forecast Date'] = pd.to_datetime(uk_yield_data_clean['Forecast Date'], errors='coerce')
uk_yield_data_clean.dropna(subset=['Forecast Date'], inplace=True)  # Drop rows where 'Forecast Date' is NaT (Not a Time)
uk_yield_data_clean.set_index('Forecast Date', inplace=True)

# Convert all other columns to float
uk_yield_data_clean = uk_yield_data_clean.apply(pd.to_numeric, errors='coerce')

uk_yield_data_clean['Date'] = pd.to_datetime(uk_yield_data_clean['Date'])
uk_yield_data_clean.set_index('Date', inplace=True)

# Web App Title
st.title("Dynamic Market Overview")

# Market News Headlines
st.subheader("Market News Headlines")
headlines = fetch_yahoo_finance_news()
for headline in headlines:
    st.write(f"- {headline}")

# US Yield Curve
show_us_yield = st.checkbox('Show US Yield Curve')
if show_us_yield:
    us_yield_data = fred.get_series('GS10')  # 10-year Treasury Rate
    plt.plot(us_yield_data.index, us_yield_data.values)
    plt.title('US 10-Year Treasury Yield')
    plt.xlabel('Date')
    plt.ylabel('Yield (%)')
    st.pyplot()

# UK Yield Curve
show_uk_yield = st.checkbox('Show UK Yield Curve')
if show_uk_yield:
    selected_date = st.selectbox('Select Date for UK Yield Curve', uk_yield_data_clean.index)
    plt.plot(uk_yield_data.columns, uk_yield_data_clean.loc[selected_date])
    plt.title('UK Yield Curve')
    plt.xlabel('Maturity (Years)')
    plt.ylabel('Yield (%)')
    st.pyplot()

# Inflation Rates
show_inflation = st.checkbox('Show Inflation Rates')
if show_inflation:
    api_url = 'https://api.api-ninjas.com/v1/inflation?country={}'.format("United States")
    response = requests.get(api_url, headers={'X-Api-Key': 'P3jnaeiRz/shEPn4iOKD6A==aaPYULKIx9Xi7xNS'})
    if response.status_code == requests.codes.ok:
        inflation_data = response.json()[0]
        st.write(f"US Inflation Rate: {inflation_data['yearly_rate_pct']}%")
    else:
        st.write("Error fetching inflation data.")

# Note: Replace `/path/to/your/csv/file/` with the actual path where you have stored the UK yield data CSV file.
