import spacy

nlp = spacy.load("en_core_web_sm")

def summarize_text(text):
    doc = nlp(text)
    sentences = [sentence.orth_ for sentence in doc.sents]
    return ' '.join(sentences[:3])  # Return the first 3 sentences as a summary

# Fetch the complete article text based on the URL (this is a placeholder; you'll need to implement this)
def fetch_article_text(url):
    response = requests.get(url)
    soup = BeautifulSoup(response.content, 'html.parser')
    paragraphs = soup.find_all('p')
    article_text = ' '.join([para.text for para in paragraphs])
    return article_text

# ... existing code ...

# Dynamic News Summary
st.markdown("## **Select a headline for summary**")  # Made this text bold and bigger
selected_headline = st.selectbox('', headline_list)
if selected_headline:
    st.write(f"Summary for: {selected_headline}")
    summary_url = headlines[selected_headline]['link']
    full_article_text = fetch_article_text(summary_url)
    summary = summarize_text(full_article_text)
    st.write(f"Summary: {summary}")
    st.write(f"For more details, [click here]({summary_url})")


