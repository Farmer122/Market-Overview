import streamlit as st
import requests
from bs4 import BeautifulSoup
import matplotlib.pyplot as plt

# Function to scrape news from Yahoo Finance
def fetch_yahoo_finance_news():
    url = "https://uk.finance.yahoo.com/topic/news/"
    response = requests.get(url)
    soup = BeautifulSoup(response.content, 'html.parser')

    headlines = []
    for item in soup.find_all('h3', {'class': lambda x: x and 'Mb(5px)' in x}):
        if item:
            text = item.get_text()
            if text:
                headlines.append(text)
    return headlines[:5]

# Function to scrape yield data from Trading Economics
def fetch_yield_data(country):
    url = f"https://tradingeconomics.com/{country.lower()}/30-year-bond-yield"
    response = requests.get(url)
    soup = BeautifulSoup(response.content, 'html.parser')
    
    yield_data = {}
    try:
        table = soup.find_all('table')[0]
        rows = table.find_all('tr')
        for row in rows[1:]:
            cols = row.find_all('td')
            if len(cols) >= 2:
                bond = cols[0].text.strip()
                yield_value = float(cols[1].text.strip())
                yield_data[bond] = yield_value
    except IndexError:
        st.write("Could not fetch yield data. Please check the Trading Economics URL.")
    
    return yield_data

# Function to plot yield curves
def plot_yield_curve(yield_data, country):
    bonds = list(yield_data.keys())
    yields = list(yield_data.values())
    plt.figure(figsize=(10, 5))
    plt.plot(bonds, yields, marker='o')
    plt.title(f'{country} Yield Curve')
    plt.xlabel('Bond')
    plt.ylabel('Yield (%)')
    plt.grid(True)
    st.pyplot()

st.title('Dynamic Market Overview')

# Dropdown for selecting the country for yield curve
country = st.selectbox('Select a country for Yield Curve:', ['united-states', 'united-kingdom'])


# Fetch and plot yield curve
yield_data = fetch_yield_data(country)
if yield_data:
    plot_yield_curve(yield_data, country)
else:
    st.write(f"No yield data available for {country}.")

# Market News Headlines
st.subheader("Top 5 Market News Headlines")
headlines = fetch_yahoo_finance_news()
if headlines:
    col1, col2 = st.columns(2)
    for i in range(0, len(headlines), 2):
        with col1:
            st.write(f"{i+1}. {headlines[i]}")
        if i + 1 < len(headlines):
            with col2:
                st.write(f"{i+2}. {headlines[i+1]}")

# Economic Calendar
st.subheader("Economic Calendar")
iframe_code = '''
<iframe src="https://sslecal2.investing.com?columns=exc_flags,exc_currency,exc_importance,exc_actual,exc_forecast,exc_previous&features=datepicker,timezone&countries=25,32,6,37,72,22,17,39,14,10,35,43,56,36,110,11,26,12,4,5&calType=day&timeZone=15&lang=1" width="650" height="467" frameborder="0" allowtransparency="true" marginwidth="0" marginheight="0"></iframe>
'''
st.components.v1.html(iframe_code, height=500)
